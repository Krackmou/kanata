#|
Source(qwerty):
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc 
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet rctl

Main(custom colemak-dh):
  grv         1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab         q    w    f    p    b    j    l    u    y    '    [    ]    z
  Code-toggle a    r    s    t    g    m    n    e    i    o    '    ret
  lsft        x    c    d    v    z    k    h    ,    .    /    rsft
  lctl lmet esc        Accent-toggle            ralt rmet rctl

Accent:
  grv         1    2    3    4    5    6    7    8    9    0    -    =    bspc 
  tab         â    w    f    p    b    j    ê    û    î    p    [    ]    z
  Code-toggle à    r    s    t    g    m    è    é    ï    ô    '    ret
  lsft        x    c    ç    v    z    k    h    ,    .    /    rsft                                oui le ç est sur le d je sais...
  lctl lmet esc        Accent-toggle            ralt rmet rctl

Code:
  grv         1    2    3    4    5    6    7    8    9    0    -    =    bspc 
  tab         %    *    =    +    \    |    /    _    !    f11   [    ]  z
  Code-toggle a    ?    @    #    !    -    :    ;    i    (    )    ret
  lsft        x    c    ^    [    ]    &    {    }    €    $    rsft
  lctl lmet esc        Accent-toggle            ralt rmet rctl
|#

(defcfg
;; You can set the value below to no if you only use the keys defined in defsrc.
  process-unmapped-keys yes
)

(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc 
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet rctl
)

(defvar
  streak-count 3
  streak-time 325
  tap-timeout 200
  hold-timeout 1000
  chord-timeout 50
)

(deftemplate charmod (char mod)
  (switch 
    ((key-timing $streak-count less-than $streak-time)) $char break
    () (tap-hold-release-timeout $tap-timeout $hold-timeout $char $mod $char) break
  )
)

(defvirtualkeys
  shift (multi (layer-switch main) lsft)
  clear (multi (layer-switch main) (on-press release-virtualkey shift))
)

(deflayermap (main)
  w (chord mtl w) 
  e (chord mtl e) 
  l i
  x c
  c (chord du d)
  s r
  d s 
  f (chord mtm t)
  j n
  k e
  o (chord mtr y)
  p (chord mtr @e-acute)
  h (chord mtm m)
  , (chord mbr ,)
  . (chord mbr .)
  / (t! charmod / rctl)
  spc (t! charmod spc (multi (layer-switch extend) (on-release tap-virtualkey clear)))
  caps (layer-toggle code)
  r (chord ptr p)
  t (chord ptr b)
  y j
  u l
  i (chord du u)
  b z
  n k
  m h
  ; o
  \ z
  z x
  alt esc
  a a
)

(defalias
  a-circ (fork (unicode â) (unicode Â) (lsft rsft))
  e-circ (fork (unicode ê) (unicode Ê) (lsft rsft))
  u-circ (fork (unicode û) (unicode Û) (lsft rsft))
  i-circ (fork (unicode î) (unicode Î) (lsft rsft))
  a-grav (fork (unicode à) (unicode À) (lsft rsft))
  e-grav (fork (unicode è) (unicode È) (lsft rsft))
  e-acute (fork (unicode é) (unicode É) (lsft rsft))
  i-trema (fork (unicode ï) (unicode Ï) (lsft rsft))
  o-circ (fork (unicode ô) (unicode Ô) (lsft rsft))
  c-cedil (fork (unicode ç) (unicode Ç) (lsft rsft))
  simple-e    (unicode ê)
  at-sign     (unicode @)
  hash-sign   (unicode #)
  dollar      (unicode $)
  percent     (unicode %)
  caret       (unicode ^)
  ampersand   (unicode &)
  asterisk    (unicode *)
  euro        (unicode €)
  lparen      (unicode "(")
  rparen      (unicode ")")
  minus       (unicode -)
  underscore  (unicode _)
  equal       (unicode =)
  plus        (unicode +)
  lbracket    (unicode [)
  rbracket    (unicode ])
  lbrace      (unicode {)
  rbrace      (unicode })
  backslash   (unicode \)
  pipe        (unicode |)
  twopoints   (unicode :)
  apostrophe_inversée    (unicode `)
  tilde       (unicode ~)
  trademark (unicode ™)
  point-virgule (unicode ;)
  exclamation (unicode !)
  interrogation (unicode ?)
  smaller_than (unicode <)
  bigger_than (unicode >)
  two 2
  zero 0
  seven 7
  mail_address (macro d u r a n d . a l e x a n d r e .  @two @zero @zero @seven @at-sign g m a i l . c o m)
  peut-être (macro p e u t  @minus @simple-e 10 t r e)
  dû (macro d (unicode û))
  où (macro o (unicode ù))
)

(defchords mtl $chord-timeout
  (w  ) w
  (  e) f
  (w e) esc
)

(defchords mtr $chord-timeout
  (y  ) y
  (  @e-acute) @e-acute
  (y @e-acute) @où
)

(defchords du $chord-timeout
  (d  ) d
  (  u) u
  (d u) @dû
)

(defchords mbr $chord-timeout
  (,  ) ,
  (  .) (t! charmod . ralt)
  (, .) ret
)

(defchords mtm $chord-timeout
  (t  ) t
  (  m) m
  (t m) @trademark
)

(defchords ptr $chord-timeout
  (p  ) p
  (  b) b
  (p b) @peut-être
  )

(deflayermap (extend)
  q @a-circ
  u @e-circ
  i @u-circ
  o @i-circ
  a @a-grav
  j @e-grav
  l @i-trema
  ; @o-circ
  c @c-cedil
)
  
(deflayermap (code)
  q   @percent
  w   @asterisk
  e   @equal
  r   @plus
  t   @backslash
  y   @pipe
  u   /
  i   @exclamation
  o   @interrogation
  p   f11
  a   @smaller_than
  s   @bigger_than
  d   @at-sign
  f   @hash-sign
  g   @underscore      
  h   @minus
  j   @twopoints
  k   @point-virgule
  l   @lparen
  ;   @rparen
  '   @apostrophe_inversée
  z   @mail_address
  x   @tilde
  c   @caret
  v   @lbracket
  b   @rbracket 
  n   @ampersand
  m   @lbrace
  ,   @rbrace
  .   @euro
  /   @dollar
  spc spc
)

#| 
Config post 24/08/2025:

        %            * = + \ | / ! ? f11  
  caps  <            > @ # _ - : ; ( ) `  
        mail_address ~ ^ [ ] & { } € $    
        alt               spc 

Config pré 24/08/2025:

        q * = + \ | - _ y f11
  caps  a % @ # ^ & : € ( ) '  
        x c [ ] z { } ; $ /
        alt   spc

|#
