(defcfg
;; You can set the value below to no if you only use the keys defined in defsrc.
  process-unmapped-keys yes
)

(defsrc
  q w e r t y u i o p
  caps  a s d f g h j k l ;
  z x c v b n m , . /
      alt   spc
)

(defvar
  streak-count 3
  streak-time 325
  tap-timeout 200
  hold-timeout 1000
  chord-timeout 50
)

(deftemplate charmod (char mod)
  (switch 
    ((key-timing $streak-count less-than $streak-time)) $char break
    () (tap-hold-release-timeout $tap-timeout $hold-timeout $char $mod $char) break
  )
)

(defvirtualkeys
  shift (multi (layer-switch main) lsft)
  clear (multi (layer-switch main) (on-press release-virtualkey shift))
)

(deflayermap (main)
  w (chord mtl w) 
  e (chord mtl e) 
  l i
  x c
  c (chord du d)
  s r
  d s 
  f (chord mtm t)
  j n
  k e
  o (chord mtr y)
  p (chord mtr ')
  h (chord mtm m)
  , (chord mbr ,)
  . (chord mbr .)
  / (t! charmod / rctl)
  spc (t! charmod spc (multi (layer-switch extend) (on-release tap-virtualkey clear)))
  caps (layer-toggle code)
  r (chord ptr p)
  t (chord ptr b)
  y j
  u l
  i (chord du u)
  b z
  n k
  m h
  ; (chord mai o)
  \ z
  z x
  alt esc
  a (chord mai a)
)

(defalias
  a-circ (fork (unicode â) (unicode Â) (lsft rsft))
  e-circ (fork (unicode ê) (unicode Ê) (lsft rsft))
  u-circ (fork (unicode û) (unicode Û) (lsft rsft))
  i-circ (fork (unicode î) (unicode Î) (lsft rsft))
  a-grav (fork (unicode à) (unicode À) (lsft rsft))
  e-grav (fork (unicode è) (unicode È) (lsft rsft))
  e-acute (fork (unicode é) (unicode É) (lsft rsft))
  i-trema (fork (unicode ï) (unicode Ï) (lsft rsft))
  o-circ (fork (unicode ô) (unicode Ô) (lsft rsft))
  c-cedil (fork (unicode ç) (unicode Ç) (lsft rsft))
  simple-e    (unicode ê)
  at-sign     (unicode @)
  hash-sign   (unicode #)
  dollar      (unicode $)
  percent     (unicode %)
  caret       (unicode ^)
  ampersand   (unicode &)
  asterisk    (unicode *)
  euro        (unicode €)
  lparen      (unicode "(")
  rparen      (unicode ")")
  minus       (unicode -)
  underscore  (unicode _)
  equal       (unicode =)
  plus        (unicode +)
  lbracket    (unicode [)
  rbracket    (unicode ])
  lbrace      (unicode {)
  rbrace      (unicode })
  backslash   (unicode \)
  pipe        (unicode |)
  twopoints   (unicode :)
  trademark (unicode ™)
  point-virgule (unicode ;)
  two 2
  zero 0
  seven 7
  mail_address (macro d u r a n d . a l e x a n d r e .  @two @zero @zero @seven @at-sign g m a i l . c o m)
  peut-être (macro p e u t  @minus @simple-e 10 t r e)
  du (macro d (unicode û))
  où (macro o (unicode ù))
)

(defchords mtl $chord-timeout
  (w  ) w
  (  e) f
  (w e) esc
)

(defchords mtr $chord-timeout
  (y  ) y
  (  ') '
  (y ') @où
)

(defchords du $chord-timeout
  (d  ) d
  (  u) u
  (d u) @du
)

(defchords mbr $chord-timeout
  (,  ) ,
  (  .) (t! charmod . ralt)
  (, .) ret
)

(defchords mtm $chord-timeout
  (t  ) t
  (  m) m
  (t m) @trademark
)

(defchords mai $chord-timeout
  (a  ) a
  (  o) o
  (a o) @mail_address
  )

(defchords ptr $chord-timeout
  (p  ) p
  (  b) b
  (p b) @peut-être
  )

(deflayermap (extend)
  q @a-circ
  u @e-circ
  i @u-circ
  o @i-circ
  a @a-grav
  j @e-grav
  k @e-acute
  l @i-trema
  ; @o-circ
  c @c-cedil
)


(deflayermap (code)
  p f11
  w @asterisk
  s @percent
  d @at-sign
  f @hash-sign
  g @caret
  h @ampersand
  j @twopoints
  k @euro 
  l @lparen
  ; @rparen
  u @minus
  i @underscore
  e @equal
  r @plus
  c @lbracket
  v @rbracket
  n @lbrace
  m @rbrace
  t @backslash
  y @pipe 
  . @dollar
  , @point-virgule
)

